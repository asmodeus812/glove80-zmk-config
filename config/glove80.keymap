/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

#define DEFAULT 0
#define LOWER 1
#define MAGIC 2
#define FACTORY_TEST 3

#define STRINGIFY(x) #x
#define EXPAND_AND_STRINGIFY(x) STRINGIFY(x)

#define KEYS_NONE
#define HYPER LS(LC(LA(LGUI)))

#define KEYS_LEFT 0 1 2 3 4 \
                  10 11 12 13 14 15 \
                  22 23 24 25 26 27 \
                  34 35 36 37 38 39 \
                  46 47 48 49 50 51 \
                  64 65 66 67 68

#define KEYS_RIGHT 5 6 7 8 9 \
                   16 17 18 19 20 21 \
                   28 29 30 31 32 33 \
                   40 41 42 43 44 45 \
                   58 59 60 61 62 63 \
                   75 76 77 78 79

#define THUMBS_LEFT 69 52 70 53 71 54

#define THUMBS_RIGHT 55 56 57 72 73 74

#define THUMBS THUMBS_LEFT THUMBS_RIGHT

#define MORPH(ID, LOWER, UPPER, MRPH) \
    ID: mod_morph_##ID { \
        compatible = "zmk,behavior-mod-morph"; \
        #binding-cells = <0>; \
        bindings = <&kp LOWER>, <&kp UPPER>; \
        mods = <(MRPH)>; \
    };

#define SUPER(ID, FIRST, SECOND, TERM, QTAP, RPI, KEYS, FLAVE) \
    ID: mod_tap_##ID { \
        compatible = "zmk,behavior-hold-tap"; \
        quick_tap_ms = <QTAP>; \
        tapping-term-ms = <TERM>; \
        flavor = FLAVE; \
        #binding-cells = <2>; \
        bindings = <&FIRST>, <&SECOND>; \
        require-prior-idle-ms = <RPI>; \
        hold-trigger-key-positions = <KEYS>; \
    };

&sk {
    quick-release;
    release-after-ms = <500>;
    /delete-property/ ignore-modifiers;
};

&soft_off {
    hold-time-ms = <2000>;
};

&caps_word {
    continue-list = <UNDERSCORE SEMI PIPE AMPS MINUS BACKSPACE DELETE LSHFT RSHFT>;
};

/ {
    macros {
        rgb_ug_status_macro: rgb_ug_status_macro_0 {
            label = "RGB_UG_STATUS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
            = <&rgb_ug RGB_STATUS>;
        };
    };

    behaviors {
        #include "macros.dtsi"

        SUPER(lkp, mo, kp,        140, 185, 0, KEYS_NONE, "hold-preferred")
        SUPER(kpp, kp, kp,        140, 0,   0, KEYS_NONE, "hold-preferred")
        SUPER(lcw, mo, caps_word, 140, 0,   0, KEYS_LEFT  THUMBS_LEFT, "hold-preferred")

        SUPER(kpr, kp, kp, 140, 185, 0, KEYS_LEFT  THUMBS_LEFT,  "tap-preferred")
        SUPER(kpl, kp, kp, 140, 0,   0, KEYS_RIGHT THUMBS_RIGHT, "tap-preferred")

        MORPH(one,   EXCL,   N1, MOD_LSFT|MOD_RSFT)
        MORPH(two,   AT,     N2, MOD_LSFT|MOD_RSFT)
        MORPH(three, HASH,   N3, MOD_LSFT|MOD_RSFT)
        MORPH(four,  DOLLAR, N4, MOD_LSFT|MOD_RSFT)
        MORPH(five,  PRCNT,  N5, MOD_LSFT|MOD_RSFT)
        MORPH(six,   CARET,  N6, MOD_LSFT|MOD_RSFT)
        MORPH(seven, AMPS,   N7, MOD_LSFT|MOD_RSFT)
        MORPH(eight, ASTRK,  N8, MOD_LSFT|MOD_RSFT)
        MORPH(nine,  LPAR,   N9, MOD_LSFT|MOD_RSFT)
        MORPH(zero,  RPAR,   N0, MOD_LSFT|MOD_RSFT)

        magic: magic_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MAGIC_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&rgb_ug_status_macro>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Base";
            bindings = <
                &kp F1    &kp F2  &kp F3  &kp F4    &kp F5                                                                                                         &kp F6    &kp F7     &kp F8   &kp F9     &kp F10
                &none     &kp N1  &kp N2  &kp N3    &kp N4    &kp N5                                                                                       &kp N6  &kp N7    &kp N8     &kp N9   &kp N0     &none
                &kp LALT  &kp Q   &kp W   &kp E     &kp R     &kp T                                                                                        &kp Y   &kp U     &kp I      &kp O    &kp P      &kp RALT
                &kp LSHFT &kp A   &kp S   &kp D     &kp F     &kp G                                                                                        &kp H   &kp J     &kp K      &kp L    &kp SEMI   &kp RSHFT
                &kp LCTRL &kp Z   &kp X   &kp C     &kp V     &kp B   &lcw 1 0         &kp LALT       &mo 3     &mo 3    &kp RALT         &lkp 1 DEL       &kp N   &kp M     &kp COMMA  &kp DOT  &kp FSLH   &kp RCTRL
                &kp LGUI  &kp TAB &kp SQT &kp BSLH  &kp EQUAL         &kpl LSHFT SPACE &kpp LCTRL ESC &kp LGUI  &kp RGUI &kpp RCTRL ENTER &kpr RSHFT BSPC          &kp MINUS &kp LBKT   &kp RBKT &kp GRAVE  &kp RGUI
            >;
        };
        fun {
            display-name = "Fun";
            bindings = <
                &none           &none     &none          &none        &none                                                                                          &none        &none        &none         &none     &none
                &kp F10         &kp F1    &kp F2         &kp F3       &kp F4          &kp F5                                                            &kp F6       &kp F7       &kp F8       &kp F9        &kp F10   &kp F12
                &macro_backtick &kp LALT  &kp LA(LEFT)   &kp LA(DOWN) &kp LA(UP)      &kp LA(RIGHT)                                                     &kp LC(LEFT) &kp RC(DOWN) &kp RC(UP)   &kp RC(RIGHT) &kp RALT  &macro_block
                &macro_quotes   &kp LSHFT &mmv MOVE_LEFT &mmv MOVE_UP &mmv MOVE_DOWN  &mmv MOVE_RIGHT                                                   &kp LEFT     &kp DOWN     &kp UP       &kp RIGHT     &kp RSHFT &macro_dquotes
                &macro_parens   &kp LCTRL &kp LG(LEFT)   &kp LG(DOWN) &kp LG(UP)      &kp LG(RIGHT)   &mkp MB3 &trans   &trans &trans &trans   &mkp MB3 &kp HOME     &kp PG_DN    &kp PG_UP    &kp END       &kp RCTRL &macro_braces
                &macro_angles   &kp LGUI  &kp  C_PP      &kp C_PREV   &kp C_NEXT                      &mkp MB1 &mkp MB2 &trans &trans &mkp MB2 &mkp MB1              &kp C_VOL_DN &kp C_VOL_UP &kp C_MUTE    &kp RGUI  &macro_brackets
            >;
        };
        mod {
            display-name = "Mod";
            bindings = <
                &none       &none            &none           &none           &none                                                                              &none         &none         &none         &none         &none
                &bt BT_CLR  &bt BT_SEL 0     &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4                                         &bt BT_DISC 0 &bt BT_DISC 1 &bt BT_DISC 2 &bt BT_DISC 3 &bt BT_DISC 4 &bt BT_CLR
                &bootloader &rgb_ug RGB_SPI  &rgb_ug RGB_SAI &rgb_ug RGB_HUI &rgb_ug RGB_BRI &rgb_ug RGB_TOG                                      &none         &none         &none         &none         &none         &bootloader
                &sys_reset  &rgb_ug RGB_SPD  &rgb_ug RGB_SAD &rgb_ug RGB_HUD &rgb_ug RGB_BRD &rgb_ug RGB_EFF                                      &none         &none         &none         &none         &none         &sys_reset
                &soft_off   &none            &none           &none           &none           &none           &none &none &none &none &none &none  &none         &none         &none         &none         &none         &soft_off
                &none       &none            &none           &bl BL_OFF      &bl BL_ON                       &none &none &none &none &none &none                &bl BL_DEC    &bl BL_INC    &none         &none         &none
            >;
        };
        num {
            display-name = "Pad";
            bindings = <
                &none   &none   &none   &none    &none                                                                 &none          &none           &none           &none         &none
                &trans  &trans  &trans  &trans  &trans  &trans                                                   &none &kp KP_NUM     &kp KP_DIVIDE   &kp KP_MULTIPLY &kp KP_EQUAL  &none
                &trans  &trans  &trans  &trans  &trans  &trans                                                   &none &kp KP_N7      &kp KP_N8       &kp KP_N9       &kp KP_MINUS  &none
                &trans  &trans  &trans  &trans  &trans  &trans                                                   &none &kp KP_N4      &kp KP_N5       &kp KP_N6       &kp KP_PLUS   &none
                &trans  &trans  &trans  &trans  &trans  &trans     &trans &trans &trans &trans &trans &trans     &none &kp KP_N1      &kp KP_N2       &kp KP_N3       &kp KP_ENTER  &none
                &trans  &trans  &trans  &trans  &trans             &trans &trans &none  &trans &trans &trans           &kp KP_COMMA   &kp KP_NUMBER_0 &kp KP_DOT      &kp KP_ENTER  &none
            >;
        };
    };
};
